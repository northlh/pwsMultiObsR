project_name = project_name,
trial_number = 2
)
?sensi_eet
time_start <- Sys.time()
eet_results <- sensi_eet(
dir_root = dir_root,
project_name = project_name,
trial_number = directories$trial_number,
variables = c("swe","q")
)
duration <- Sys.time() - time_start
# Read in morris object
morris_design <- readRDS(
file.path(directories$dir_dynamic_input, "!morris_design.rds"))
# Create list of dataframes to retrieve bootstrap results (lower, mean, upper)
list_eta_dfs <- list()
measures <- c("lower","mean","upper")
for(i in seq_along(measures)){
df_name <- paste0("df_",measures[i])
list_eta_dfs[[df_name]] <- data.frame(
Q_09112500 = eet_results$eet_list_gof_q$`09112500`$total$nrmse$bootstrap$eta_star[,i],
Q_09112200 = eet_results$eet_list_gof_q$`09112200`$total$nrmse$bootstrap$eta_star[,i],
SWE_380 = eet_results$eet_list_gof_swe$CO$`380`$nrmse$bootstrap$eta_star[,i],
SWE_737 = eet_results$eet_list_gof_swe$CO$`737`$nrmse$bootstrap$eta_star[,i]
)
rownames(list_eta_dfs[[df_name]]) <- colnames(morris_design$X)
}
?fit_logis
logis_output <- fit_logis(
df_mean = list_eta_dfs$df_mean,
df_lower = list_eta_dfs$df_lower,
df_upper = list_eta_dfs$df_upper,
ncol_plot = 2,
dir_plot = directories$dir_plot
)
?fit_logis
logis_output <- fit_logis(
df_mean = list_eta_dfs$df_mean,
df_lower = list_eta_dfs$df_lower,
df_upper = list_eta_dfs$df_upper,
ncol_plot = 2,
dir_plot = directories$dir_plot
)
?plot_heatmap_eta
param_attributes <- read.csv(file.path(directories$dir_dynamic_input, "!param_attributes.csv"))
plot_heatmap_eta(
df_eta = list_eta_dfs$df_mean,
type1_params = logis_output$type1_params,
type2_params = logis_output$type2_params,
param_attributes = param_attributes,
dir_plot = directories$dir_plot
)
traceback()
param_attributes$names
View(param_attributes)
param_attributes$name
rm(list = ls()) # Clear Environment
devtools::load_all() # FOR DEV
#devtools::install()
library(pwsMultiObsR)
#ls("package:pwsMultiObsR")
dir_root <- file.path("/Users/lnorth/Desktop/test_pwsMultiObsR")
project_name <- "test_east"
# If you have already created the trial and want to come back to it, use this:
directories <- fm_trial_set(
dir_root = dir_root,
project_name = project_name,
trial_number = 2
)
?read_output
eet_results <- read_output(
dir_root = dir_root,
project_name = project_name,
trial_number = directories$trial_number,
var_names = c("swe","q"),
metrics = c("gof","metric"),
list_type = c("eet")
)
# Read in morris object
morris_design <- readRDS(
file.path(directories$dir_dynamic_input, "!morris_design.rds"))
# Create list of dataframes to retrieve bootstrap results (lower, mean, upper)
list_eta_dfs <- list()
measures <- c("lower","mean","upper")
for(i in seq_along(measures)){
df_name <- paste0("df_",measures[i])
list_eta_dfs[[df_name]] <- data.frame(
Q_09112500 = eet_results$eet_list_gof_q$`09112500`$total$nrmse$bootstrap$eta_star[,i],
Q_09112200 = eet_results$eet_list_gof_q$`09112200`$total$nrmse$bootstrap$eta_star[,i],
SWE_380 = eet_results$eet_list_gof_swe$CO$`380`$nrmse$bootstrap$eta_star[,i],
SWE_737 = eet_results$eet_list_gof_swe$CO$`737`$nrmse$bootstrap$eta_star[,i]
)
rownames(list_eta_dfs[[df_name]]) <- colnames(morris_design$X)
}
?fit_logis
logis_output <- fit_logis(
df_mean = list_eta_dfs$df_mean,
df_lower = list_eta_dfs$df_lower,
df_upper = list_eta_dfs$df_upper,
ncol_plot = 2,
dir_plot = directories$dir_plot
)
?plot_heatmap_eta
param_attributes <- read.csv(file.path(directories$dir_dynamic_input, "!param_attributes.csv"))
plot_heatmap_eta(
df_eta = list_eta_dfs$df_mean,
type1_params = logis_output$type1_params,
type2_params = logis_output$type2_params,
param_attributes = param_attributes,
dir_plot = directories$dir_plot
)
traceback()
rm(list = ls()) # Clear Environment
devtools::load_all() # FOR DEV
#devtools::install()
library(pwsMultiObsR)
#ls("package:pwsMultiObsR")
dir_root <- file.path("/Users/lnorth/Desktop/test_pwsMultiObsR")
project_name <- "test_east"
# If you have already created the trial and want to come back to it, use this:
directories <- fm_trial_set(
dir_root = dir_root,
project_name = project_name,
trial_number = 2
)
?read_output
eet_results <- read_output(
dir_root = dir_root,
project_name = project_name,
trial_number = directories$trial_number,
var_names = c("swe","q"),
metrics = c("gof","metric"),
list_type = c("eet")
)
# Read in morris object
morris_design <- readRDS(
file.path(directories$dir_dynamic_input, "!morris_design.rds"))
# Create list of dataframes to retrieve bootstrap results (lower, mean, upper)
list_eta_dfs <- list()
measures <- c("lower","mean","upper")
for(i in seq_along(measures)){
df_name <- paste0("df_",measures[i])
list_eta_dfs[[df_name]] <- data.frame(
Q_09112500 = eet_results$eet_list_gof_q$`09112500`$total$nrmse$bootstrap$eta_star[,i],
Q_09112200 = eet_results$eet_list_gof_q$`09112200`$total$nrmse$bootstrap$eta_star[,i],
SWE_380 = eet_results$eet_list_gof_swe$CO$`380`$nrmse$bootstrap$eta_star[,i],
SWE_737 = eet_results$eet_list_gof_swe$CO$`737`$nrmse$bootstrap$eta_star[,i]
)
rownames(list_eta_dfs[[df_name]]) <- colnames(morris_design$X)
}
?fit_logis
logis_output <- fit_logis(
df_mean = list_eta_dfs$df_mean,
df_lower = list_eta_dfs$df_lower,
df_upper = list_eta_dfs$df_upper,
ncol_plot = 2,
dir_plot = directories$dir_plot
)
?plot_heatmap_eta
param_attributes <- read.csv(file.path(directories$dir_dynamic_input, "!param_attributes.csv"))
plot_heatmap_eta(
df_eta = list_eta_dfs$df_mean,
type1_params = logis_output$type1_params,
type2_params = logis_output$type2_params,
param_attributes = param_attributes,
dir_plot = directories$dir_plot
)
traceback()
rm(list = ls()) # Clear Environment
devtools::load_all() # FOR DEV
#devtools::install()
library(pwsMultiObsR)
#ls("package:pwsMultiObsR")
dir_root <- file.path("/Users/lnorth/Desktop/test_pwsMultiObsR")
project_name <- "test_east"
# If you have already created the trial and want to come back to it, use this:
directories <- fm_trial_set(
dir_root = dir_root,
project_name = project_name,
trial_number = 2
)
?read_output
eet_results <- read_output(
dir_root = dir_root,
project_name = project_name,
trial_number = directories$trial_number,
var_names = c("swe","q"),
metrics = c("gof","metric"),
list_type = c("eet")
)
# Read in morris object
morris_design <- readRDS(
file.path(directories$dir_dynamic_input, "!morris_design.rds"))
# Create list of dataframes to retrieve bootstrap results (lower, mean, upper)
list_eta_dfs <- list()
measures <- c("lower","mean","upper")
for(i in seq_along(measures)){
df_name <- paste0("df_",measures[i])
list_eta_dfs[[df_name]] <- data.frame(
Q_09112500 = eet_results$eet_list_gof_q$`09112500`$total$nrmse$bootstrap$eta_star[,i],
Q_09112200 = eet_results$eet_list_gof_q$`09112200`$total$nrmse$bootstrap$eta_star[,i],
SWE_380 = eet_results$eet_list_gof_swe$CO$`380`$nrmse$bootstrap$eta_star[,i],
SWE_737 = eet_results$eet_list_gof_swe$CO$`737`$nrmse$bootstrap$eta_star[,i]
)
rownames(list_eta_dfs[[df_name]]) <- colnames(morris_design$X)
}
?fit_logis
logis_output <- fit_logis(
df_mean = list_eta_dfs$df_mean,
df_lower = list_eta_dfs$df_lower,
df_upper = list_eta_dfs$df_upper,
ncol_plot = 2,
dir_plot = directories$dir_plot
)
?plot_heatmap_eta
param_attributes <- read.csv(file.path(directories$dir_dynamic_input, "!param_attributes.csv"))
plot_heatmap_eta(
df_eta = list_eta_dfs$df_mean,
type1_params = logis_output$type1_params,
type2_params = logis_output$type2_params,
param_attributes = param_attributes,
dir_plot = directories$dir_plot
)
devtools::document()
rm(list = ls()) # Clear Environment
devtools::load_all() # FOR DEV
#devtools::install()
library(pwsMultiObsR)
#ls("package:pwsMultiObsR")
dir_root <- file.path("/Users/lnorth/Desktop/test_pwsMultiObsR")
project_name <- "test_east"
# If you have already created the trial and want to come back to it, use this:
directories <- fm_trial_set(
dir_root = dir_root,
project_name = project_name,
trial_number = 2
)
?read_output
eet_results <- read_output(
dir_root = dir_root,
project_name = project_name,
trial_number = directories$trial_number,
var_names = c("swe","q"),
metrics = c("gof","metric"),
list_type = c("eet")
)
# Read in morris object
morris_design <- readRDS(
file.path(directories$dir_dynamic_input, "!morris_design.rds"))
# Create list of dataframes to retrieve bootstrap results (lower, mean, upper)
list_eta_dfs <- list()
measures <- c("lower","mean","upper")
for(i in seq_along(measures)){
df_name <- paste0("df_",measures[i])
list_eta_dfs[[df_name]] <- data.frame(
Q_09112500 = eet_results$eet_list_gof_q$`09112500`$total$nrmse$bootstrap$eta_star[,i],
Q_09112200 = eet_results$eet_list_gof_q$`09112200`$total$nrmse$bootstrap$eta_star[,i],
SWE_380 = eet_results$eet_list_gof_swe$CO$`380`$nrmse$bootstrap$eta_star[,i],
SWE_737 = eet_results$eet_list_gof_swe$CO$`737`$nrmse$bootstrap$eta_star[,i]
)
rownames(list_eta_dfs[[df_name]]) <- colnames(morris_design$X)
}
?fit_logis
logis_output <- fit_logis(
df_mean = list_eta_dfs$df_mean,
df_lower = list_eta_dfs$df_lower,
df_upper = list_eta_dfs$df_upper,
ncol_plot = 2,
dir_plot = directories$dir_plot
)
?plot_heatmap_eta
param_attributes <- read.csv(file.path(directories$dir_dynamic_input, "!param_attributes.csv"))
plot_heatmap_eta(
df_eta = list_eta_dfs$df_mean,
type1_params = logis_output$type1_params,
type2_params = logis_output$type2_params,
param_attributes = param_attributes,
dir_plot = directories$dir_plot
)
rm(list = ls()) # Clear Environment
devtools::load_all() # FOR DEV
#devtools::install()
library(pwsMultiObsR)
#ls("package:pwsMultiObsR")
dir_root <- file.path("/Users/lnorth/Desktop/test_pwsMultiObsR")
project_name <- "test_east"
# param_names <- c(
#   "dday_intcp","gwflow_coef","snow_cbh_adj","tmax_allrain_offset",
#   "tmin_cbh_adj","tmax_cbh_adj","jh_coef","den_max","rain_cbh_adj",
#   "tmax_allsnow","dday_slope","radmax","covden_sum","freeh2o_cap",
#   "emis_noppt","soil_moist_max")
param_names <- c("rad_trncf", "tmax_allsnow", "jh_coef", "tmax_cbh_adj")
?pwsMultiObsR::fm_trial_create
directories <- fm_trial_create(
dir_root = dir_root,
project_name = project_name,
type = "mmlhs",
param_names = param_names,
nruns = 30
)
rm(list = ls()) # Clear Environment
devtools::load_all() # FOR DEV
#devtools::install()
library(pwsMultiObsR)
#ls("package:pwsMultiObsR")
dir_root <- file.path("/Users/lnorth/Desktop/test_pwsMultiObsR")
project_name <- "test_east"
# param_names <- c(
#   "dday_intcp","gwflow_coef","snow_cbh_adj","tmax_allrain_offset",
#   "tmin_cbh_adj","tmax_cbh_adj","jh_coef","den_max","rain_cbh_adj",
#   "tmax_allsnow","dday_slope","radmax","covden_sum","freeh2o_cap",
#   "emis_noppt","soil_moist_max")
param_names <- c("rad_trncf", "tmax_allsnow", "jh_coef", "tmax_cbh_adj")
?pwsMultiObsR::fm_trial_create
directories <- fm_trial_create(
dir_root = dir_root,
project_name = project_name,
type = "mmlhs",
param_names = param_names,
nruns = 30
)
traceback()
rm(list = ls()) # Clear Environment
devtools::load_all() # FOR DEV
#devtools::install()
library(pwsMultiObsR)
#ls("package:pwsMultiObsR")
dir_root <- file.path("/Users/lnorth/Desktop/test_pwsMultiObsR")
project_name <- "test_east"
# param_names <- c(
#   "dday_intcp","gwflow_coef","snow_cbh_adj","tmax_allrain_offset",
#   "tmin_cbh_adj","tmax_cbh_adj","jh_coef","den_max","rain_cbh_adj",
#   "tmax_allsnow","dday_slope","radmax","covden_sum","freeh2o_cap",
#   "emis_noppt","soil_moist_max")
param_names <- c("rad_trncf", "tmax_allsnow", "jh_coef", "tmax_cbh_adj")
?pwsMultiObsR::fm_trial_create
directories <- fm_trial_create(
dir_root = dir_root,
project_name = project_name,
type = "mmlhs",
param_names = param_names,
nruns = 30
)
rm(list = ls()) # Clear Environment
devtools::load_all() # FOR DEV
#devtools::install()
library(pwsMultiObsR)
#ls("package:pwsMultiObsR")
dir_root <- file.path("/Users/lnorth/Desktop/test_pwsMultiObsR")
project_name <- "test_east"
# param_names <- c(
#   "dday_intcp","gwflow_coef","snow_cbh_adj","tmax_allrain_offset",
#   "tmin_cbh_adj","tmax_cbh_adj","jh_coef","den_max","rain_cbh_adj",
#   "tmax_allsnow","dday_slope","radmax","covden_sum","freeh2o_cap",
#   "emis_noppt","soil_moist_max")
param_names <- c("rad_trncf", "tmax_allsnow", "jh_coef", "tmax_cbh_adj")
?pwsMultiObsR::fm_trial_create
directories <- fm_trial_create(
dir_root = dir_root,
project_name = project_name,
type = "mmlhs",
param_names = param_names,
nruns = 30
)
# If you have already created the trial and want to come back to it, use this:
directories2 <- fm_trial_set(
dir_root = dir_root,
project_name = project_name,
trial_number = 3
)
?run_batches
run_batches(
dir_root = dir_root,
project_name = project_name,
trial_number = 3
)
?calc_gof
gof_results <- calc_gof(
dir_root = dir_root,
project_name = project_name,
trial_number = directories$trial_number,
start_year = 2013,
end_year = 2022,
hru_out_names = "pkwater_equiv",
seg_out_names = "seg_outflow",
default = FALSE
)
df_gof <- data.frame(
Q_09112500 = gof_results$list_gof_q$`09112500`$total$nrmse,
Q_09112200 = gof$list_gof_q$`09112200`$total$nrmse,
SWE_380 = gof_results$list_gof_swe$CO$`380`$nrmse,
SWE_737 = gof_results$list_gof_swe$CO$`737`$nrmse
)
df_gof <- data.frame(
Q_09112500 = gof_results$list_gof_q$`09112500`$total$nrmse,
Q_09112200 = gof_results$list_gof_q$`09112200`$total$nrmse,
SWE_380 = gof_results$list_gof_swe$CO$`380`$nrmse,
SWE_737 = gof_results$list_gof_swe$CO$`737`$nrmse
)
#rownames(list_eta_dfs[[df_name]]) <- colnames(morris_design$X)
View(df_gof)
?find_behav
?find_behav
behav <- find_behav(
df_gof = df_gof,
gof_thresh = 100,
cost = TRUE
)
View(df_gof)
?find_behav_intersect
criteria_intersection <- list(
q_both = colnames(df_gof[c(1,2)]),
q_snotel_380 = colnames(df_gof[c(2,3)])
)
?find_behav_intersect
behav_intersect <- find_behav_intersect(
df_gof = df_gof,
criteria_names = criteria_intersection,
idx_behav = behav$idx_behav,
q_col = 1
)
browseVignettes("pwsMultiObsR")
list.files(system.file("example_inputs/BlueRiv", package = "pwsMultiObsR"))
list.files(system.file("example_input/BlueRiv", package = "pwsMultiObsR"))
rm(list = ls()) # Clear Environment
# devtools::load_all() # FOR DEV
# #ls("package:pwsMultiObsR")
library(pwsMultiObsR)
dir_root <- file.path("/Users/lnorth/Desktop/test_pwsMultiObsR")
project_name <- "example_east"
?pwsMultiObsR::fm_project_create
dir_project <- fm_project_create(dir_root = dir_root,
project_name = project_name)
?pwsMultiObsR::load_example_files
# dir_project <- fm_project_create(dir_root = dir_root,
#                                  project_name = project_name)
?pwsMultiObsR::load_example_files
# dir_project <- fm_project_create(dir_root = dir_root,
#                                  project_name = project_name)
devtools::document()
?pwsMultiObsR::load_example_files
# dir_project <- fm_project_create(dir_root = dir_root,
#                                  project_name = project_name)
?pwsMultiObsR::load_example_inputs
# dir_project <- fm_project_create(dir_root = dir_root,
#                                  project_name = project_name)
?pwsMultiObsR::load_example_inputs
load_example_inputs(
dir_root = dir_root,
project_name = project_name,
example_catchment = "EastRiv"
)
rm(list = ls()) # Clear Environment
devtools::load_all() # FOR DEV
# #ls("package:pwsMultiObsR")
library(pwsMultiObsR)
dir_root <- file.path("/Users/lnorth/Desktop/test_pwsMultiObsR")
project_name <- "example_east"
rm(list = ls()) # Clear Environment
devtools::load_all() # FOR DEV
# #ls("package:pwsMultiObsR")
library(pwsMultiObsR)
dir_root <- file.path("/Users/lnorth/Desktop/test_pwsMultiObsR")
project_name <- "example_east2"
?pwsMultiObsR::fm_project_create
dir_project <- fm_project_create(dir_root = dir_root,
project_name = project_name)
?pwsMultiObsR::load_example_inputs
load_example_inputs(
dir_root = dir_root,
project_name = project_name,
example_catchment = "EastRiv"
)
rm(list = ls()) # Clear Environment
devtools::load_all() # FOR DEV
# #ls("package:pwsMultiObsR")
library(pwsMultiObsR)
dir_root <- file.path("/Users/lnorth/Desktop/test_pwsMultiObsR")
project_name <- "example_east2"
rm(list = ls()) # Clear Environment
devtools::load_all() # FOR DEV
# #ls("package:pwsMultiObsR")
library(pwsMultiObsR)
dir_root <- file.path("/Users/lnorth/Desktop/test_pwsMultiObsR")
project_name <- "example_east3"
?pwsMultiObsR::fm_project_create
dir_project <- fm_project_create(dir_root = dir_root,
project_name = project_name)
?pwsMultiObsR::load_example_inputs
load_example_inputs(
dir_root = dir_root,
project_name = project_name,
example_catchment = "EastRiv"
)
rm(list = ls()) # Clear Environment
devtools::load_all() # FOR DEV
# #ls("package:pwsMultiObsR")
library(pwsMultiObsR)
dir_root <- file.path("/Users/lnorth/Desktop/test_pwsMultiObsR")
project_name <- "example_east4"
?pwsMultiObsR::fm_project_create
dir_project <- fm_project_create(dir_root = dir_root,
project_name = project_name)
?pwsMultiObsR::load_example_inputs
load_example_inputs(
dir_root = dir_root,
project_name = project_name,
example_catchment = "EastRiv"
)
file.path(dir_project, "default_input")
traceback()
